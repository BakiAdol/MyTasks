@model MyTasks.Models.TaskModel

<partial name="_navBar" />

<div class="detailsContainer shadowAndBackground">
    <p class="formTitle">Task Details</p>
    <div class="taskDatesContainer">
        <p>Created on @Model.CreatedDate.ToString("dd MMM")</p>
        @{
            if (Model.UpdatedDate != null)
            {
                var dd = (DateTime)Model.UpdatedDate;
                <p>Last Modified @dd.ToString("dd MMM")</p>
            }
        }
    </div>
    
    <form asp-controller="Details" asp-action="Index">
        @Html.HiddenFor(item => item.Id)
        
        <div style="width:100%">
            <span asp-validation-for="MyTask" class="ErrorMessageText"></span>
        </div>
        <input asp-for="MyTask" type="text" class="textInputStyle inputTypeTextStyle"
               placeholder="@(Model.MyTask ?? "Enter task")" />

        <textarea asp-for="Description" rows="3" class="textInputStyle textAreaStyle"
                  placeholder="@(Model.Description ?? "Task Description")"></textarea>

        <div class="detailPickerRow">
            <div class="selectOptionBox">
                <p>Priority: </p>
                <select asp-for="Priority">
                    <option value="0">High</option>
                    <option value="1">Medium</option>
                    <option value="2">Low</option>
                </select>
            </div>
            <div class="selectOptionBox">
                <p>Status: </p>
                <select asp-for="Status">
                    <option value="0">Not Started</option>
                    <option value="1">In Progress</option>
                    <option value="2">Completed</option>
                </select>
            </div>
            <div class="dueDatePicker">
                <p>Due Date: </p>
                <input asp-for="DueDate" type="date" class="inputTypeDate" required
                value="@Model.DueDate.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")">
            </div>
        </div>
        <div class="saveDeleteTaskInDetail">
            <div class="editTaskButtonArea">
                <input type="submit" value="Save" class="inputTypeSubmitPrimary" />
            </div>
            
            <div class="editTaskButtonArea">
                <a href="@Url.Action("DeleteATask", "Details",
                new { taskId = Model.Id })"
                       class="dangerButton">Delete</a>
            </div>
            
        </div>
    </form>
</div>